import mongoose from "mongoose";
import bcrypt from "bcryptjs";
import dotenv from "dotenv";
import User from "./models/user.model.js";
import Product from "./models/product.model.js";
import ProductType from "./models/productType.model.js";
import Review from "./models/review.model.js";
import Coupon from "./models/coupon.model.js";
import Order from "./models/order.model.js";

dotenv.config();

try {
  await mongoose.connect(process.env.MONGO_URI);
  console.log("MongoDB connected successfully");
} catch (error) {
  console.error("MongoDB connection failed:", error);
  process.exit(1);
}

const seed = async () => {
  // X√≥a t·∫•t c·∫£ d·ªØ li·ªáu c≈©
  await User.deleteMany();
  await Product.deleteMany();
  await ProductType.deleteMany();
  await Review.deleteMany();
  await Coupon.deleteMany();
  await Order.deleteMany();

  console.log("üóëÔ∏è ƒê√£ x√≥a d·ªØ li·ªáu c≈©");

  // T·∫°o danh m·ª•c s·∫£n ph·∫©m
  const categories = await ProductType.insertMany([
    { name: "√Åo thun", description: "√Åo thun nam n·ªØ c√°c lo·∫°i" },
    { name: "√Åo s∆° mi", description: "√Åo s∆° mi c√¥ng s·ªü, d·ª± ti·ªác" },
    { name: "Qu·∫ßn jean", description: "Qu·∫ßn jean nam n·ªØ th·ªùi trang" },
    { name: "Qu·∫ßn t√¢y", description: "Qu·∫ßn t√¢y c√¥ng s·ªü, l·ªãch s·ª±" },
    { name: "V√°y", description: "V√°y ƒë·∫ßm n·ªØ th·ªùi trang" },
    { name: "√Åo kho√°c", description: "√Åo kho√°c, jacket th·ªùi trang" },
    { name: "Gi√†y", description: "Gi√†y d√©p nam n·ªØ c√°c lo·∫°i" },
    { name: "T√∫i x√°ch", description: "T√∫i x√°ch, balo th·ªùi trang" },
  ]);

  console.log("üìÇ ƒê√£ t·∫°o danh m·ª•c s·∫£n ph·∫©m");

  // T·∫°o ng∆∞·ªùi d√πng
  const admin = await User.create({
    name: "Admin",
    email: "admin@fashion.com",
    password: await bcrypt.hash("123456", 10),
    role: "admin",
  });

  const seller = await User.create({
    name: "Nguy·ªÖn VƒÉn B√°n",
    email: "seller@fashion.com",
    password: await bcrypt.hash("123456", 10),
    role: "seller",
  });

  const customer1 = await User.create({
    name: "Tr·∫ßn Th·ªã Mua",
    email: "customer1@example.com",
    password: await bcrypt.hash("123456", 10),
    role: "customer",
  });

  const customer2 = await User.create({
    name: "L√™ VƒÉn Kh√°ch",
    email: "customer2@example.com",
    password: await bcrypt.hash("123456", 10),
    role: "customer",
  });

  console.log("üë• ƒê√£ t·∫°o ng∆∞·ªùi d√πng");

  // T·∫°o s·∫£n ph·∫©m
  const products = await Product.create([
    {
      name: "√Åo thun nam basic",
      description: "√Åo thun nam ch·∫•t li·ªáu cotton 100%, tho√°ng m√°t, d·ªÖ gi·∫∑t",
      price: 150000,
      category: categories[0]._id,
      brand: "Fashion Basic",
      countInStock: 50,
      image: "tshirts.jpg",
      ratings: 4.5,
      numReviews: 12,
      seller: seller._id,
    },
    {
      name: "√Åo s∆° mi nam tr·∫Øng",
      description: "√Åo s∆° mi nam c√¥ng s·ªü, ch·∫•t li·ªáu cotton cao c·∫•p",
      price: 350000,
      category: categories[1]._id,
      brand: "Office Style",
      countInStock: 30,
      image: "suits.jpg",
      ratings: 4.8,
      numReviews: 8,
      seller: seller._id,
    },
    {
      name: "Qu·∫ßn jean nam slim fit",
      description: "Qu·∫ßn jean nam √¥m d√°ng, ch·∫•t li·ªáu denim cao c·∫•p",
      price: 450000,
      category: categories[2]._id,
      brand: "Denim Pro",
      countInStock: 25,
      image: "jeans.jpg",
      ratings: 4.2,
      numReviews: 15,
      seller: seller._id,
    },
    {
      name: "Qu·∫ßn t√¢y nam ƒëen",
      description: "Qu·∫ßn t√¢y nam c√¥ng s·ªü, ch·∫•t li·ªáu polyester tho√°ng m√°t",
      price: 280000,
      category: categories[3]._id,
      brand: "Business Wear",
      countInStock: 40,
      image: "suits.jpg",
      ratings: 4.6,
      numReviews: 10,
      seller: seller._id,
    },
    {
      name: "V√°y ƒë·∫ßm n·ªØ hoa",
      description: "V√°y ƒë·∫ßm n·ªØ th·ªùi trang, h·ªça ti·∫øt hoa nh·∫π nh√†ng",
      price: 380000,
      category: categories[4]._id,
      brand: "Lady Fashion",
      countInStock: 20,
      image: "tshirts.jpg",
      ratings: 4.7,
      numReviews: 6,
      seller: seller._id,
    },
    {
      name: "√Åo kho√°c denim nam",
      description: "√Åo kho√°c denim nam th·ªùi trang, phong c√°ch streetwear",
      price: 650000,
      category: categories[5]._id,
      brand: "Street Style",
      countInStock: 15,
      image: "jackets.jpg",
      ratings: 4.9,
      numReviews: 18,
      seller: seller._id,
    },
    {
      name: "Gi√†y sneaker nam",
      description: "Gi√†y sneaker nam th·ªÉ thao, ƒë·∫ø cao su b·ªÅn b·ªâ",
      price: 520000,
      category: categories[6]._id,
      brand: "Sport Shoes",
      countInStock: 35,
      image: "shoes.jpg",
      ratings: 4.4,
      numReviews: 22,
      seller: seller._id,
    },
    {
      name: "T√∫i x√°ch n·ªØ th·ªùi trang",
      description: "T√∫i x√°ch n·ªØ th·ªùi trang, ch·∫•t li·ªáu da t·ªïng h·ª£p cao c·∫•p",
      price: 420000,
      category: categories[7]._id,
      brand: "Luxury Bag",
      countInStock: 12,
      image: "bags.jpg",
      ratings: 4.3,
      numReviews: 9,
      seller: seller._id,
    },
  ]);

  console.log("üëï ƒê√£ t·∫°o s·∫£n ph·∫©m");

  // T·∫°o ƒë√°nh gi√°
  const reviews = await Review.create([
    {
      user: customer1._id,
      product: products[0]._id,
      rating: 5,
      comment: "√Åo r·∫•t ƒë·∫πp, ch·∫•t li·ªáu t·ªët, giao h√†ng nhanh!",
    },
    {
      user: customer2._id,
      product: products[0]._id,
      rating: 4,
      comment: "√Åo v·ª´a v·∫∑n, m√†u s·∫Øc ƒë·∫πp nh∆∞ trong h√¨nh",
    },
    {
      user: customer1._id,
      product: products[1]._id,
      rating: 5,
      comment: "√Åo s∆° mi r·∫•t ƒë·∫πp, ph√π h·ª£p ƒëi l√†m",
    },
    {
      user: customer2._id,
      product: products[2]._id,
      rating: 4,
      comment: "Qu·∫ßn jean ƒë·∫πp, d√°ng √¥m nh∆∞ng h∆°i ch·∫≠t",
    },
    {
      user: customer1._id,
      product: products[3]._id,
      rating: 5,
      comment: "Qu·∫ßn t√¢y r·∫•t ƒë·∫πp, ch·∫•t li·ªáu t·ªët",
    },
    {
      user: customer2._id,
      product: products[4]._id,
      rating: 4,
      comment: "V√°y ƒë·∫πp, ph√π h·ª£p ƒëi d·ª± ti·ªác",
    },
    {
      user: customer1._id,
      product: products[5]._id,
      rating: 5,
      comment: "√Åo kho√°c r·∫•t ƒë·∫πp, phong c√°ch th·ªùi trang",
    },
    {
      user: customer2._id,
      product: products[6]._id,
      rating: 4,
      comment: "Gi√†y ƒë·∫πp, ƒëi tho·∫£i m√°i",
    },
    {
      user: customer1._id,
      product: products[7]._id,
      rating: 4,
      comment: "T√∫i x√°ch ƒë·∫πp, ch·∫•t li·ªáu t·ªët",
    },
  ]);

  console.log("‚≠ê ƒê√£ t·∫°o ƒë√°nh gi√°");

  // T·∫°o m√£ gi·∫£m gi√°
  const coupons = await Coupon.create([
    {
      code: "WELCOME10",
      discountPercentage: 10,
      expirationDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 ng√†y
      isActive: true,
      userId: customer1._id,
    },
    {
      code: "FASHION20",
      discountPercentage: 20,
      expirationDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000), // 15 ng√†y
      isActive: true,
      userId: customer2._id,
    },
  ]);

  console.log("üé´ ƒê√£ t·∫°o m√£ gi·∫£m gi√°");

  // T·∫°o ƒë∆°n h√†ng m·∫´u
  const orders = await Order.create([
    {
      user: customer1._id,
      orderItems: [
        {
          product: products[0]._id,
          quantity: 2,
        },
        {
          product: products[1]._id,
          quantity: 1,
        },
      ],
      shippingAddress: {
        address: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1",
        city: "TP. H·ªì Ch√≠ Minh",
        postalCode: "70000",
        country: "Vi·ªát Nam",
      },
      paymentMethod: "COD",
      totalPrice: 650000,
      isPaid: true,
      paidAt: new Date(),
      isDelivered: false,
    },
    {
      user: customer2._id,
      orderItems: [
        {
          product: products[2]._id,
          quantity: 1,
        },
        {
          product: products[6]._id,
          quantity: 1,
        },
      ],
      shippingAddress: {
        address: "456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 3",
        city: "TP. H·ªì Ch√≠ Minh",
        postalCode: "70000",
        country: "Vi·ªát Nam",
      },
      paymentMethod: "Bank Transfer",
      totalPrice: 970000,
      isPaid: true,
      paidAt: new Date(),
      isDelivered: true,
      deliveredAt: new Date(),
    },
  ]);

  console.log("üì¶ ƒê√£ t·∫°o ƒë∆°n h√†ng m·∫´u");

  console.log("‚úÖ Seed th√†nh c√¥ng! D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫°o:");
  console.log(`- ${categories.length} danh m·ª•c s·∫£n ph·∫©m`);
  console.log(`- ${products.length} s·∫£n ph·∫©m`);
  console.log(`- ${reviews.length} ƒë√°nh gi√°`);
  console.log(`- ${coupons.length} m√£ gi·∫£m gi√°`);
  console.log(`- ${orders.length} ƒë∆°n h√†ng m·∫´u`);
  console.log("\nüîë Th√¥ng tin ƒëƒÉng nh·∫≠p:");
  console.log("Admin: admin@fashion.com / 123456");
  console.log("Seller: seller@fashion.com / 123456");
  console.log("Customer 1: customer1@example.com / 123456");
  console.log("Customer 2: customer2@example.com / 123456");

  process.exit();
};

seed().catch((error) => {
  console.error("‚ùå L·ªói khi seed:", error);
  process.exit(1);
});
